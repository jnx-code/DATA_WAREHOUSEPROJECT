use silver;
-- here we created al the table of silver layer where we have to insert all the table value from bronze layer into silver table 
delimiter $$
create procedure silver_procedure()
begin 
drop table if exists silver.crm_cust_info;
    create table silver.crm_cust_info(
        cst_id int,
        cst_key varchar(50),
        cst_first_name  varchar(50),
        cst_last_name  varchar(50),
        cst_material_status  varchar(50),
        cst_gndr  varchar(50),
        cst_create_date date,
        dwh_create_date datetime default current_timestamp
    );
    truncate table  silver.crm_cust_info;
    
	drop table if exists silver.crm_prd_info;
    create table silver.crm_prd_info(
        prd_id int,
        prd_key  varchar(50),
        prd_cat varchar(50),
        prd_nm  varchar(50),
        prd_cost int,
        prd_line  varchar(50),
        prd_start_dt date,
        prd_end_dt date
		-- dwh_create_date datetime default current_timestamp
    );
    truncate table silver.crm_prd_info;

	drop table if exists silver.crm_sales_details;
    create table silver.crm_sales_details(
        sls_ord_num  varchar(30),
        sls_prd_key  varchar(30),
        sls_cust_id int,
        sls_order_dt date,
        sls_ship_dt date,
        sls_due_dt date,
        sls_sales int,
        sls_quantity int,
        sls_price int,
		dwh_create_date datetime default current_timestamp
    );
    truncate table silver.crm_sales_details;

	drop table if exists silver.erp_loc_a101;
    create table silver.erp_loc_a101(
        cid  varchar(50),
        cntry  varchar(50),
		dwh_create_date datetime default current_timestamp
    );
    truncate table silver.erp_loc_a101;

    drop table if exists silver.erp_cust_az12;
    create table silver.erp_cust_az12(
        cid  varchar(40),
        bdate datetime,
        gender  varchar(10),
		dwh_create_date datetime default current_timestamp
    );
   truncate table silver.erp_cust_az12;
    
	drop table if exists silver.erp_px_cat_g1v2;
    create table silver.erp_px_cat_g1v2(
        id  varchar(50),
        cat  varchar(50),
        subcat  varchar(50),
        maintanane  varchar(50),
		dwh_create_date datetime default current_timestamp
    );
    truncate table silver.erp_px_cat_g1v2;
    
end $$ 
delimiter ;

-- here we insert all the tables data from bronze layer into slver layer perfectly
-- inserting our crm_cust_info  data into silver layer 
truncate table silver.crm_cust_info;
insert into silver.crm_cust_info(cst_id,cst_key,cst_first_name,cst_last_name,cst_material_status,cst_gndr,cst_create_date)    
select 
cst_id as id,
cst_key ,
trim(cst_first_name) as firstname,
trim(cst_last_name) as lastname,
case when trim(cst_marital_status)  = 'm' then 'married' 
when trim(cst_marital_status) = 'S' then 'single'
else 'n/a'
end cst_material_status ,
case when trim(cst_gndr) = 'F' then 'female'
when trim(cst_gndr) = 'M' then 'male'
else 'n/a'
end cst_gndr,
cst_create_date 
from (select *,row_number() over(partition by cst_id order by cst_create_date desc) as flag_last from bronze.crm_cust_info
where cst_id is not null
) t where flag_last = 1;


-- inserting our crm_prd_info data into the silver layer 
truncate table silver.crm_prd_info;
insert into silver.crm_prd_info (prd_id,prd_key,prd_cat,prd_nm,prd_cost,prd_line,prd_start_dt,prd_end_dt)
select 
prd_id,
replace (substring(prd_key,1,5),'-','_') as cat_id,
substring(prd_key,7,length(prd_key)) as prd_key,
prd_nm,
ifnull(prd_cost,0) as prd_cost,
case when upper(trim(prd_line)) = 'R' then 'red sale'
when upper(trim(prd_line)) = 'S' then 'sun sale'
when upper(trim(prd_line)) = 'M' then 'milk sale'
when upper(trim(prd_line)) = 'T' then 'turning sale'
else 'n/a'
end as prd_line,
CASE
    WHEN LENGTH(TRIM(prd_start_dt)) = 8 
         AND RIGHT(TRIM(prd_start_dt), 2) <> '00' 
         THEN STR_TO_DATE(TRIM(prd_start_dt), '%Y%m%d')
    WHEN LENGTH(TRIM(prd_start_dt)) = 10 
         AND INSTR(TRIM(prd_start_dt), '-') > 0
         THEN STR_TO_DATE(TRIM(prd_start_dt), '%Y-%m-%d')
    WHEN LENGTH(TRIM(prd_start_dt)) = 10 
         AND INSTR(TRIM(prd_start_dt), '/') > 0
         THEN STR_TO_DATE(TRIM(prd_start_dt), '%Y/%m/%d')
    ELSE NULL
  END AS prd_start_dt,
  CAST(
    LEAD(
      CASE
        WHEN LENGTH(TRIM(prd_start_dt)) = 8 
             AND RIGHT(TRIM(prd_start_dt), 2) <> '00' 
             THEN STR_TO_DATE(TRIM(prd_start_dt), '%Y%m%d')
        WHEN LENGTH(TRIM(prd_start_dt)) = 10 
             AND INSTR(TRIM(prd_start_dt), '-') > 0
             THEN STR_TO_DATE(TRIM(prd_start_dt), '%Y-%m-%d')
        WHEN LENGTH(TRIM(prd_start_dt)) = 10 
             AND INSTR(TRIM(prd_start_dt), '/') > 0
             THEN STR_TO_DATE(TRIM(prd_start_dt), '%Y/%m/%d')
        ELSE NULL
      END
    ) OVER (
      PARTITION BY SUBSTRING(prd_key, 7, LENGTH(prd_key)) 
      ORDER BY prd_start_dt
    ) - INTERVAL 1 DAY AS DATE
  ) AS prd_end_dt
from bronze.crm_prd_info;

-- inserting our sales details data into silver layer 
truncate table silver.crm_sales_details;
insert into silver.crm_sales_details(
sls_ord_num,
sls_prd_key,
sls_cust_id,
sls_order_dt,
sls_ship_dt,
sls_due_dt,
sls_sales,
sls_quantity,
sls_price)
select sls_ord_num,
sls_prd_key,
sls_cust_id,
sls_order_dt,
sls_ship_dt,
sls_due_dt,
case when sls_sales is null or sls_sales <=0 or sls_sales != sls_quantity * abs(sls_price)
then sls_quantity * abs(sls_price)
else sls_sales
end as sls_sales,
sls_quantity,
case when sls_price is null or sls_price <=0
then sls_sales / nullif(sls_quantity,0)
else sls_price 
end as sls_price
from bronze.crm_sales_details;

-- inserting into erp_cust_az12
truncate table silver.erp_cust_az12;
insert into silver.erp_cust_az12(cid,bdate,gender)
select 
case when cid like '%NAS' then substring(cid,4,length(cid))
else cid
end as cid,
case when bdate > current_timestamp() then null 
else bdate 
end as bdate,
gender
from bronze.erp_cust_az12;

-- inserting into silver.erp_loc_a101
truncate table silver.erp_loc_a101;
insert into silver.erp_loc_a101(cid,cntry)
select
replace(cid, '-','') as cid,
CASE 
    when upper(trim(replace(replace(replace(cntry, '\r', ''), '\n', ''), '\t', ''))) = 'DE' 
        THEN 'Germany'
    when upper(trim(replace(replace(replace(cntry, '\r', ''), '\n', ''), '\t', ''))) in ('US', 'USA') 
        then 'United States'
    when trim(cntry) = '' OR cntry is null
        then 'n/a'
    else trim(cntry)
end as country
from bronze.erp_loc_a101;

-- inserting into silver.erp_px_cat_g1v2
truncate table silver.erp_px_cat_g1v2;
insert into silver.erp_px_cat_g1v2(id,cat,subcat,maintanane) 
select 
id,cat,subcat,maintanane from bronze.erp_px_cat_g1v2;
